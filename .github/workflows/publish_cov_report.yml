name: Publicar Reporte de Cobertura #nombre del workflow

on:
  push:
    branches:
      - main  # o tu rama principal

jobs:
  build-and-publish-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código 
        uses: actions/checkout@v4 #clona mi repositorio

      - name: Instalar .NET SDK 9.0
        uses: actions/setup-dotnet@v4 #Instala el SDK de .NET 9.0
        with:
          dotnet-version: '9.0.x'

      - name: Restaurar paquetes NuGet
        run: dotnet restore ./Bank/Bank.sln #Restaura dependecias o paquetes NUGET

      - name: Compilar solución
        run: dotnet build ./Bank/Bank.sln --configuration Release --no-restore #Compila el proyecto

      - name: Ejecutar pruebas con cobertura #Ejecuta los test y genera reporte
        run: dotnet test ./Bank/Bank.Domain.Tests/Bank.Domain.Tests.csproj --configuration Release --no-build --collect:"XPlat Code Coverage"

      - name: Instalar ReportGenerator #INstala reportgenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generar reporte HTML de cobertura #Genera reporte
        run: |
          reportgenerator -reports:"./Bank/Bank.Domain.Tests/TestResults/*/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:Html

      - name: Publicar reporte en GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Bank/coverage-report
          publish_branch: gh-pages
